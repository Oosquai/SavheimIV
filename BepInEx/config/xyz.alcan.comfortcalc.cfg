## Settings file was created by plugin Comfort Tweaks v3.3.1
## Plugin GUID: xyz.alcan.comfortcalc

[1. Mod Options]

## If the mod is enabled
# Setting type: Boolean
# Default value: true
Mod Enabled = true

## The configuration is locked and may not be changed by clients. Only active for servers.
# Setting type: Boolean
# Default value: true
Config Locked = true

[2. Resting]

## Range of comfort detection
# Setting type: Int32
# Default value: 10
# Acceptable value range: From 10 to 100
Comfort Range = 30

## Dont require shelter for comfort bonus pieces (You still need to sit)
# Setting type: Boolean
# Default value: false
Ignore Shelter = false

## Seconds resting before rested
# Setting type: Int32
# Default value: 20
# Acceptable value range: From 0 to 100
Rested Delay = 5

## Stamina Regen Multiplier while Resting
# Setting type: Int32
# Default value: 400
# Acceptable value range: From 0 to 1000
Stamina Regen Multiplier Percent = 400

## Health Regen Multiplier while Resting
# Setting type: Int32
# Default value: 300
# Acceptable value range: From 0 to 1000
Health Regen Multiplier Percent = 300

## Eitr Regen Multiplier while Resting
# Setting type: Int32
# Default value: 300
# Acceptable value range: From 0 to 1000
Eitr Regen Multiplier Percent = 300

[3. Rested Buff]

## Rested time at minimum comfort in seconds
# Setting type: Int32
# Default value: 480
# Acceptable value range: From 0 to 3000
Base Rested Time = 480

## Seconds Rested time per Comfort Level
# Setting type: Int32
# Default value: 60
# Acceptable value range: From 0 to 3000
Rested per Comfort = 90

## How much extra experience you gain while rested. 50 is 1.5x
# Setting type: Int32
# Default value: 50
# Acceptable value range: From 0 to 500
% additional XP = 0

## How fast your Stamina bar fills when regeneration starts. 100 is 1x, 200 is 2x etc
# Setting type: Int32
# Default value: 200
# Acceptable value range: From 100 to 1000
Stamina Regen % = 200

## Decreased Stamina Use for running
# Setting type: Int32
# Default value: 0
# Acceptable value range: From 0 to 100
Run Stamina Drain Modifier % = 0

## Decreased Stamina Use for jumping
# Setting type: Int32
# Default value: 0
# Acceptable value range: From 0 to 100
Jump Stamina Drain Modifier % = 0

## How much HP you regenerate. 100 is normal regeneration, 200 is 2x etc
# Setting type: Int32
# Default value: 150
# Acceptable value range: From 100 to 3000
Health Regen % = 150

## How much Eitr you regenerate. 100 is normal regeneration, 200 is 2x etc
# Setting type: Int32
# Default value: 200
# Acceptable value range: From 100 to 3000
Eitr Regen % = 200

## How much Damage you do while rested. 100 is 1x, 200 is 2x etc
# Setting type: Int32
# Default value: 100
# Acceptable value range: From 100 to 1000
Damage % = 100

## Maximum Carry Weight added while rested
# Setting type: Int32
# Default value: 0
# Acceptable value range: From 0 to 1000
Added Max Carry Weight = 0

## Save Rested buff on Logout
# Setting type: Boolean
# Default value: false
Stay Rested between Sessions = true

[4. Teleport]

## Lose Rested buff time when teleporting
# Setting type: Boolean
# Default value: false
Lose Rested buff when teleporting = true

## Rested time in seconds that gets used to teleport set distance - 0 is all
# Setting type: Int32
# Default value: 6
# Acceptable value range: From 0 to 6000
Teleport Cost = 1

## Distance in Meter that is used for Teleport Cost
# Setting type: Int32
# Default value: 10
# Acceptable value range: From 1 to 1000
Teleport Distance for Cost = 4

## Block the player from teleporting if rested time is not enough to pay tax (otherwise youll be able to teleport regardless if youre rested or not but you will arrive unrested if youre not rested for long enough
# Setting type: Boolean
# Default value: true
Block teleport if not rested enough = false

[5. Comfort Pieces List]

## Show the comfort pieces List
# Setting type: Boolean
# Default value: false
Show Comfort Pieces List = true

## Only Shows and the List while in shelter (should reduce lag)
# Setting type: Boolean
# Default value: false
Show Comfort Pieces List only in Shelter = true

## Show the comfort pieces that are currently providing comfort
# Setting type: Boolean
# Default value: true
Show Gained Comfort Pieces = true

## X value in % of the Screen from Top Left
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 100
X Value = 2

## Y value in % of the Screen from Top Left
# Setting type: Int32
# Default value: 35
# Acceptable value range: From 0 to 100
Y Value = 35

## Font color of the Comfort Pieces List
# Setting type: Color
# Default value: FFFFFFFF
Font Color = FFFFFFFF

## Font size
# Setting type: Int32
# Default value: 24
Font Size = 24

## Show/Hide the list of comfort pieces
# Setting type: KeyboardShortcut
# Default value: F6
Toggle Visibility = F6

## List update interval in seconds
# Setting type: Int32
# Default value: 3
# Acceptable value range: From 1 to 100
List update interval = 3

[6. Missing Comfort Pieces]

## Lists comfort pieces you dont have the comfort from
# Setting type: Boolean
# Default value: true
Show Missing Comfort Pieces = true

## Lists only unlocked comfort pieces you're able to build but dont have the comfort from
# Setting type: Boolean
# Default value: true
Show Only Known Missing Comfort Pieces = true

## Font color of the Missing Pieces List
# Setting type: Color
# Default value: FF0000FF
Missing Pieces Font Color = FF0000FF

[7. Enable Pieces]

## Make Maypole buildable
# Setting type: Boolean
# Default value: false
Force enable Maypole = false

## Make Yule Tree buildable
# Setting type: Boolean
# Default value: false
Force enable Yule Tree = false

## Make Jack o' Turnip buildable
# Setting type: Boolean
# Default value: false
Force enable Jack o Turnip = false

[8. Comfort Piece Settings]

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Armour Stand Comfort = 1

# Setting type: ComfortGroup
# Default value: None
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Armour Stand Comfort Group = None

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Ashwood Bed Comfort = 1

# Setting type: ComfortGroup
# Default value: Bed
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Ashwood Bed Comfort Group = Bed

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Bed Comfort = 1

# Setting type: ComfortGroup
# Default value: Bed
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Bed Comfort Group = Bed

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Bonfire Comfort = 1

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Bonfire Comfort Group = Fire

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Campfire Comfort = 1

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Campfire Comfort Group = Fire

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Iron Fire Pit Comfort = 1

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Iron Fire Pit Comfort Group = Fire

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Hearth Comfort = 2

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Hearth Comfort Group = Fire

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Red Jute Carpet Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Red Jute Carpet Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Blue Jute Carpet Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Blue Jute Carpet Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Black Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Black Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Blue Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Blue Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
White and Red Striped Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
White and Red Striped Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Red Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Red Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Green Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Green Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Blue, Red and White Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Blue, Red and White Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
White and Blue Striped Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
White and Blue Striped Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Yellow Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Yellow Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Purple Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Purple Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Orange Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Orange Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
White Banner Comfort = 1

# Setting type: ComfortGroup
# Default value: Banner
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
White Banner Comfort Group = Banner

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Barber Station Comfort = 2

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Barber Station Comfort Group = Chair

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Hot Tub Comfort = 2

# Setting type: ComfortGroup
# Default value: None
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Hot Tub Comfort Group = None

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Dragon Bed Comfort = 2

# Setting type: ComfortGroup
# Default value: Bed
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Dragon Bed Comfort Group = Bed

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Wood Bench Comfort = 1

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Wood Bench Comfort Group = Chair

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Black Marble Bench Comfort = 1

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Black Marble Bench Comfort Group = Chair

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Black Marble Table Comfort = 1

# Setting type: ComfortGroup
# Default value: Table
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Black Marble Table Comfort Group = Table

# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 10
Black Marble Throne Comfort = 3

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Black Marble Throne Comfort Group = Chair

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Ashwood Bench Comfort = 1

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Ashwood Bench Comfort Group = Chair

# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 10
Bone Throne Comfort = 3

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Bone Throne Comfort Group = Chair

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Hanging Brazier Comfort = 1

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Hanging Brazier Comfort Group = Fire

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Standing Brazier Comfort = 1

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Standing Brazier Comfort Group = Fire

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Blue Standing Brazier Comfort = 1

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Blue Standing Brazier Comfort Group = Fire

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Stool Comfort = 1

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Stool Comfort Group = Chair

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Wood Chair Comfort = 2

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Wood Chair Comfort Group = Chair

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Darkwood Chair Comfort = 2

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Darkwood Chair Comfort Group = Chair

# Setting type: Int32
# Default value: 0
# Acceptable value range: From 0 to 10
Jack-o-turnip Comfort = 0

# Setting type: ComfortGroup
# Default value: None
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Jack-o-turnip Comfort Group = None

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Lava Lantern Comfort = 1

# Setting type: ComfortGroup
# Default value: None
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Lava Lantern Comfort Group = None

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Sitting Log Comfort = 1

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Sitting Log Comfort Group = Chair

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Maypole Comfort = 1

# Setting type: ComfortGroup
# Default value: None
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Maypole Comfort Group = None

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Table Comfort = 1

# Setting type: ComfortGroup
# Default value: Table
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Table Comfort Group = Table

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Long Heavy Table Comfort = 2

# Setting type: ComfortGroup
# Default value: Table
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Long Heavy Table Comfort Group = Table

# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Round Table Comfort = 2

# Setting type: ComfortGroup
# Default value: Table
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Round Table Comfort Group = Table

# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 10
Raven Throne Comfort = 3

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Raven Throne Comfort Group = Chair

# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 10
Stone Throne Comfort = 3

# Setting type: ComfortGroup
# Default value: Chair
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Stone Throne Comfort Group = Chair

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Yule Tree Comfort = 1

# Setting type: ComfortGroup
# Default value: None
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Yule Tree Comfort Group = None

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Asksvin Rug Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Asksvin Rug Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Deer Rug Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Deer Rug Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Lox Rug Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Lox Rug Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Hare Rug Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Hare Rug Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Straw Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Straw Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
Wolf Rug Comfort = 1

# Setting type: ComfortGroup
# Default value: Carpet
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
Wolf Rug Comfort Group = Carpet

# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 10
bws_meadows Comfort = 1

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
bws_meadows Comfort Group = Fire

# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 10
bws_blackforest Comfort = 3

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
bws_blackforest Comfort Group = Fire

# Setting type: Int32
# Default value: 5
# Acceptable value range: From 0 to 10
bws_swamps Comfort = 5

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
bws_swamps Comfort Group = Fire

# Setting type: Int32
# Default value: 7
# Acceptable value range: From 0 to 10
bws_mountains Comfort = 7

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
bws_mountains Comfort Group = Fire

# Setting type: Int32
# Default value: 9
# Acceptable value range: From 0 to 10
bws_plains Comfort = 9

# Setting type: ComfortGroup
# Default value: Fire
# Acceptable values: None, Fire, Bed, Banner, Chair, Table, Carpet
bws_plains Comfort Group = Fire

[8a1. Small potion of invigoration]

## Potion use rested Time in seconds
# Setting type: Int32
# Default value: 480
# Acceptable value range: From 1 to 6000
Rested time = 480

## Potion use cooldown time in seconds
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 1 to 6000
Potion cooldown = 1

[8a2. Potion of invigoration]

## Potion use rested Time in seconds
# Setting type: Int32
# Default value: 930
# Acceptable value range: From 1 to 6000
Rested time = 780

## Potion use cooldown time in seconds
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 1 to 6000
Potion cooldown = 1

[8a3. Large potion of invigoration]

## Potion use rested Time in seconds
# Setting type: Int32
# Default value: 1380
# Acceptable value range: From 1 to 6000
Rested time = 1080

## Potion use cooldown time in seconds
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 1 to 6000
Potion cooldown = 1

[9. Buffs]

## Gain Bonus Comfort when resting Together?
# Setting type: Boolean
# Default value: false
Enable Group Buff = true

## Range at which group members count as resting together
# Setting type: Int32
# Default value: 4
# Acceptable value range: From 1 to 100
Rest Together Radius = 12

## Percentage of Party (rounded down, minimum 2 people) that has to be resting together
# Setting type: Int32
# Default value: 50
# Acceptable value range: From 0 to 100
Rest Together Group Percent = 50

## Comfort provided by resting together
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Rest Together Group Comfort = 3

[ct_bonfireinabottle]

## Crafting station where ct_bonfireinabottle is available.
# Setting type: CraftingTable
# Default value: Cauldron
# Acceptable values: Disabled, Inventory, Workbench, Cauldron, Forge, ArtisanTable, StoneCutter, MageTable, BlackForge, Custom
Crafting Station (mediumUpgrade) = Cauldron

# Setting type: String
# Default value: 
Custom Crafting Station (mediumUpgrade) = 

## Required crafting station level to craft ct_bonfireinabottle.
# Setting type: Int32
# Default value: 2
Crafting Station Level (mediumUpgrade) = 2

## Whether only one of the ingredients is needed to craft ct_bonfireinabottle
# Setting type: Toggle
# Default value: Off
# Acceptable values: Off, On
Require only one resource (mediumUpgrade) = Off

## Multiplies the crafted amount based on the quality of the resources when crafting ct_bonfireinabottle. Only works, if Require Only One Resource is true.
# Setting type: Single
# Default value: 1
Quality Multiplier (mediumUpgrade) = 1

## Item costs to craft ct_bonfireinabottle
# Setting type: String
# Default value: ct_campfireinabottle:1,OnionSoup:1
Crafting Costs (mediumUpgrade) = ct_campfireinabottle:1,OnionSoup:1

## Crafting station where ct_bonfireinabottle is available.
# Setting type: CraftingTable
# Default value: Cauldron
# Acceptable values: Disabled, Inventory, Workbench, Cauldron, Forge, ArtisanTable, StoneCutter, MageTable, BlackForge, Custom
Crafting Station (mediumScratch) = Cauldron

# Setting type: String
# Default value: 
Custom Crafting Station (mediumScratch) = 

## Required crafting station level to craft ct_bonfireinabottle.
# Setting type: Int32
# Default value: 2
Crafting Station Level (mediumScratch) = 2

## Whether only one of the ingredients is needed to craft ct_bonfireinabottle
# Setting type: Toggle
# Default value: Off
# Acceptable values: Off, On
Require only one resource (mediumScratch) = Off

## Multiplies the crafted amount based on the quality of the resources when crafting ct_bonfireinabottle. Only works, if Require Only One Resource is true.
# Setting type: Single
# Default value: 1
Quality Multiplier (mediumScratch) = 1

## Item costs to craft ct_bonfireinabottle
# Setting type: String
# Default value: QueensJam:1,OnionSoup:1
Crafting Costs (mediumScratch) = QueensJam:1,OnionSoup:1

## ct_bonfireinabottle drops from this creature.
# Setting type: String
# Default value: 
Drops from = 

## Weight of ct_bonfireinabottle.
# Setting type: Single
# Default value: 1
Weight = 1

## Trader value of ct_bonfireinabottle.
# Setting type: Int32
# Default value: 0
Trader Value = 0

## Which traders sell ct_bonfireinabottle.
# Setting type: Trader
# Default value: None
# Acceptable values: None, Haldor, Hildir
# Multiple values can be set at the same time by separating them with , (e.g. Debug, Warning)
Trader Selling = None

## Price of ct_bonfireinabottle at the trader.
# Setting type: UInt32
# Default value: 0
Trader Price = 0

## Stack size of ct_bonfireinabottle in the trader. Also known as the number of items sold by a trader in one transaction.
# Setting type: UInt32
# Default value: 1
Trader Stack = 1

## Required global key to unlock ct_bonfireinabottle at the trader.
# Setting type: String
# Default value: 
Trader Required Global Key = 

[ct_campfireinabottle]

## Crafting station where ct_campfireinabottle is available.
# Setting type: CraftingTable
# Default value: Cauldron
# Acceptable values: Disabled, Inventory, Workbench, Cauldron, Forge, ArtisanTable, StoneCutter, MageTable, BlackForge, Custom
Crafting Station = Cauldron

# Setting type: String
# Default value: 
Custom Crafting Station = 

## Required crafting station level to craft ct_campfireinabottle.
# Setting type: Int32
# Default value: 1
Crafting Station Level = 1

## Whether only one of the ingredients is needed to craft ct_campfireinabottle
# Setting type: Toggle
# Default value: Off
# Acceptable values: Off, On
Require only one resource = Off

## Multiplies the crafted amount based on the quality of the resources when crafting ct_campfireinabottle. Only works, if Require Only One Resource is true.
# Setting type: Single
# Default value: 1
Quality Multiplier = 1

## Item costs to craft ct_campfireinabottle
# Setting type: String
# Default value: QueensJam:1
Crafting Costs = QueensJam:1

## ct_campfireinabottle drops from this creature.
# Setting type: String
# Default value: 
Drops from = 

## Weight of ct_campfireinabottle.
# Setting type: Single
# Default value: 1
Weight = 1

## Trader value of ct_campfireinabottle.
# Setting type: Int32
# Default value: 0
Trader Value = 0

## Which traders sell ct_campfireinabottle.
# Setting type: Trader
# Default value: None
# Acceptable values: None, Haldor, Hildir
# Multiple values can be set at the same time by separating them with , (e.g. Debug, Warning)
Trader Selling = None

## Price of ct_campfireinabottle at the trader.
# Setting type: UInt32
# Default value: 0
Trader Price = 0

## Stack size of ct_campfireinabottle in the trader. Also known as the number of items sold by a trader in one transaction.
# Setting type: UInt32
# Default value: 1
Trader Stack = 1

## Required global key to unlock ct_campfireinabottle at the trader.
# Setting type: String
# Default value: 
Trader Required Global Key = 

[ct_livingroominabottle]

## Crafting station where ct_livingroominabottle is available.
# Setting type: CraftingTable
# Default value: Cauldron
# Acceptable values: Disabled, Inventory, Workbench, Cauldron, Forge, ArtisanTable, StoneCutter, MageTable, BlackForge, Custom
Crafting Station (largeUpgrade) = Cauldron

# Setting type: String
# Default value: 
Custom Crafting Station (largeUpgrade) = 

## Required crafting station level to craft ct_livingroominabottle.
# Setting type: Int32
# Default value: 3
Crafting Station Level (largeUpgrade) = 3

## Whether only one of the ingredients is needed to craft ct_livingroominabottle
# Setting type: Toggle
# Default value: Off
# Acceptable values: Off, On
Require only one resource (largeUpgrade) = Off

## Multiplies the crafted amount based on the quality of the resources when crafting ct_livingroominabottle. Only works, if Require Only One Resource is true.
# Setting type: Single
# Default value: 1
Quality Multiplier (largeUpgrade) = 1

## Item costs to craft ct_livingroominabottle
# Setting type: String
# Default value: ct_bonfireinabottle:1,BarleyWineBase:1
Crafting Costs (largeUpgrade) = ct_bonfireinabottle:1,BarleyWineBase:1

## Crafting station where ct_livingroominabottle is available.
# Setting type: CraftingTable
# Default value: Cauldron
# Acceptable values: Disabled, Inventory, Workbench, Cauldron, Forge, ArtisanTable, StoneCutter, MageTable, BlackForge, Custom
Crafting Station (largeScratch) = Cauldron

# Setting type: String
# Default value: 
Custom Crafting Station (largeScratch) = 

## Required crafting station level to craft ct_livingroominabottle.
# Setting type: Int32
# Default value: 3
Crafting Station Level (largeScratch) = 3

## Whether only one of the ingredients is needed to craft ct_livingroominabottle
# Setting type: Toggle
# Default value: Off
# Acceptable values: Off, On
Require only one resource (largeScratch) = Off

## Multiplies the crafted amount based on the quality of the resources when crafting ct_livingroominabottle. Only works, if Require Only One Resource is true.
# Setting type: Single
# Default value: 1
Quality Multiplier (largeScratch) = 1

## Item costs to craft ct_livingroominabottle
# Setting type: String
# Default value: QueensJam:1,OnionSoup:1,BarleyWineBase:1
Crafting Costs (largeScratch) = QueensJam:1,OnionSoup:1,BarleyWineBase:1

## ct_livingroominabottle drops from this creature.
# Setting type: String
# Default value: 
Drops from = 

## Weight of ct_livingroominabottle.
# Setting type: Single
# Default value: 1
Weight = 1

## Trader value of ct_livingroominabottle.
# Setting type: Int32
# Default value: 0
Trader Value = 0

## Which traders sell ct_livingroominabottle.
# Setting type: Trader
# Default value: None
# Acceptable values: None, Haldor, Hildir
# Multiple values can be set at the same time by separating them with , (e.g. Debug, Warning)
Trader Selling = None

## Price of ct_livingroominabottle at the trader.
# Setting type: UInt32
# Default value: 0
Trader Price = 0

## Stack size of ct_livingroominabottle in the trader. Also known as the number of items sold by a trader in one transaction.
# Setting type: UInt32
# Default value: 1
Trader Stack = 1

## Required global key to unlock ct_livingroominabottle at the trader.
# Setting type: String
# Default value: 
Trader Required Global Key = 

[jc_necklace_blueish]

## Crafting station where jc_necklace_blueish is available.
# Setting type: CraftingTable
# Default value: Custom
# Acceptable values: Disabled, Inventory, Workbench, Cauldron, Forge, ArtisanTable, StoneCutter, MageTable, BlackForge, Custom
Crafting Station = Custom

# Setting type: String
# Default value: op_transmution_table
Custom Crafting Station = op_transmution_table

## Required crafting station level to craft jc_necklace_blueish.
# Setting type: Int32
# Default value: 3
Crafting Station Level = 1

## Maximum crafting station level to upgrade and repair jc_necklace_blueish.
# Setting type: Int32
# Default value: 3
Maximum Crafting Station Level = 3

## Whether only one of the ingredients is needed to craft jc_necklace_blueish
# Setting type: Toggle
# Default value: Off
# Acceptable values: Off, On
Require only one resource = Off

## Multiplies the crafted amount based on the quality of the resources when crafting jc_necklace_blueish. Only works, if Require Only One Resource is true.
# Setting type: Single
# Default value: 1
Quality Multiplier = 1

## Item costs to craft jc_necklace_blueish
# Setting type: String
# Default value: Chain:1,Perfect_blueish_Socket:1
Crafting Costs = Simple_blueish_Socket:1,DeerHide:2,Flint:1

## Item costs per level to upgrade jc_necklace_blueish
# Setting type: String
# Default value: Coins:500
Upgrading Costs = Coins:300

## jc_necklace_blueish drops from this creature.
# Setting type: String
# Default value: 
Drops from = 

## Weight of jc_necklace_blueish.
# Setting type: Single
# Default value: 0.1
Weight = 0.1

## Trader value of jc_necklace_blueish.
# Setting type: Int32
# Default value: 0
Trader Value = 0

## Which traders sell jc_necklace_blueish.
# Setting type: Trader
# Default value: None
# Acceptable values: None, Haldor, Hildir
# Multiple values can be set at the same time by separating them with , (e.g. Debug, Warning)
Trader Selling = None

## Price of jc_necklace_blueish at the trader.
# Setting type: UInt32
# Default value: 0
Trader Price = 0

## Stack size of jc_necklace_blueish in the trader. Also known as the number of items sold by a trader in one transaction.
# Setting type: UInt32
# Default value: 1
Trader Stack = 1

## Required global key to unlock jc_necklace_blueish at the trader.
# Setting type: String
# Default value: 
Trader Required Global Key = 

[x. Advanced Options]

## Saves the Value of Hotkey Toggle
# Setting type: Boolean
# Default value: false
Value of Hotkey toggle (showing/not showing) = false

