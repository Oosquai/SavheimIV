###############################################################################
# Savheim Elements - prefabs
###############################################################################
# Wet + Lightning = stagger.
#   - Bosses immune.
#   - 6 second cooldown from start of effect to trigger again.
#   - AE to those Wet?
# Wet + Frost = frozen
#   - Bosses immune
#   - Independent durations for players, elites, and all others.
#   - Freeze animations and movement.
#   - Any reduction in health breaks freeze.  Players can cleanse each other.
#   - Longest duration cooldown from time freeze breaks.
# Fire + Poison = explosion that tosses everyone away and sets vfx_Burning
#   - Primary target staggered in place.
#   - Nearby targets knocked away and briefly snared, but not staggered.
#   - Bosses immune to stagger and knockback, but can be primary targets.

###############################################################################
# Creatures don't always get wet in weather that makes players wet.  Lame.
# Trigger on player getting wet.  Loop on player to make other creatures wet if weather appropriate
- prefab: vfx_Wet
  type: create
  fallback: true                                 # lower priority than elemental interactions below
  environments: Rain, LightRain, ThunderStorm, nofogts, SwampRain, Bonemass, Mistlands_rain, Mistlands_thunder
  poke:
  - prefab: Player
    maxDistance: 1
    limit: 1
    parameter: p_player_wet_loop

- prefab: Player
  type: poke, p_player_wet_loop
  objects:
  - vfx_Wet, 1
  poke:
  - self: true
    delay: 3
    parameter: p_player_wet_loop
  - prefab: creature
    maxDistance: 30
    parameter: p_make_me_wet

- prefab: creature
  type: poke, p_make_me_wet
  objectRpc:
  - name: RPC_AddStatusEffect
    1: hash, Wet
    2: bool, true
    3: int, 1
    4: float, 1

###############################################################################
# Wet + Lightning triggers
- prefab: vfx_Wet
  type: create
  objects:
  - fx_Lightning, 1
  poke:
  - prefab: Player
    maxDistance: 8                               ### CHAIN REACTION RANGE
    parameter: p_elemental_wet_lightning <vec> <randf_0.5_0.6>
  - prefab: creature
    maxDistance: 8                               ### CHAIN REACTION RANGE
    parameter: p_elemental_wet_lightning <vec> <randf_0.5_0.6>

- prefab: fx_Lightning
  type: create
  objects:
  - vfx_Wet, 1
  poke:
  - prefab: Player
    maxDistance: 8                               ### CHAIN REACTION RANGE
    parameter: p_elemental_wet_lightning <vec> <randf_0.5_0.6>
  - prefab: creature
    maxDistance: 8                               ### CHAIN REACTION RANGE
    parameter: p_elemental_wet_lightning <vec> <randf_0.5_0.6>

#######################################
# Wet + Frost triggers
- prefab: vfx_Wet
  type: create
  objects:
  - sfx_Frost_Start, 1
  poke:
  - prefab: Player
    maxDistance: 1
    limit: 1
    parameter: p_elemental_wet_frost
  - prefab: creature
    maxDistance: 1
    limit: 1
    parameter: p_elemental_wet_frost

- prefab: sfx_Frost_Start
  type: create
  objects:
  - vfx_Wet, 1
  poke:
  - prefab: Player
    maxDistance: 1
    limit: 1
    parameter: p_elemental_wet_frost
  - prefab: creature
    maxDistance: 1
    limit: 1
    parameter: p_elemental_wet_frost

#######################################
# Fire + Poison triggers
- prefab: vfx_Burning
  type: create
  objects:
  - vfx_Poison, 1
  poke:
  - prefab: Player
    maxDistance: 1
    limit: 1
    parameter: p_elemental_fire_poison
  - prefab: creature
    maxDistance: 1
    limit: 1
    parameter: p_elemental_fire_poison

- prefab: vfx_Poison
  type: create
  objects:
  - vfx_Burning, 1
  poke:
  - prefab: Player
    maxDistance: 1
    limit: 1
    parameter: p_elemental_fire_poison
  - prefab: creature
    maxDistance: 1
    limit: 1
    parameter: p_elemental_fire_poison

###############################################################################
# Wet + Lightning Effects
# This process looks for wet creatures and creates chain reactions off them to spread the effect
- prefab: Player, creature
  type: poke, p_elemental_wet_lightning
  objects:
  - vfx_Wet, 0.1                                 # only apply to those also wet.  needed for chain reaction logic
  objectRpc:
  - name: RPC_AddStatusEffect
    1: hash, Lightning                           # causes this to chain react when everyone's wet
    2: bool, true
    3: int, 1
    4: float, 1
    delay: <par2>                                # random delay to chain reactions
  poke:
  - self: true
    parameter: p_elemental_wet_lightning_stagger <par1>

# Bosses (and serpents!) immune to stagger, but can still spread
- prefab: Eikthyr, gd_king, Bonemass, Dragon, GoblinKing, SeekerQueen, Fader, Serpent, BonemawSerpent
  type: poke, p_elemental_wet_lightning_stagger
  weight: 1E30  

# if not immune and off cooldown, do fx, stagger, and cooldown
- prefab: Player, creature
  type: poke, p_elemental_wet_lightning_stagger
  filter: d_elemental_wet_lightning_cd_rst       # only apply if off cooldown
  data: d_elemental_wet_lightning_cd_set         # set cooldown
  injectData: true
  spawns:
  - fx_chainlightning_hit
  - fx_chainlightning_spread, 0,0,0.5, 0,0,0, d_empty_data, 0.1
  objectRpc:
  - name: RPC_Stagger
    1: vec, <par1>
    delay: 0.1                                   # so the hit that applies doesn't crit
  poke:
  - self: true
    delay: 9                                     ### COOLDOWN
    parameter: p_elemental_wet_lightning_cd_rst

- prefab: Player, creature
  type: poke, p_elemental_wet_lightning_cd_rst
  data: d_elemental_wet_lightning_cd_rst
  injectData: true

###############################################################################
# Wet + Frost Effects
# Bosses immune - high-weight no-op
- prefab: Eikthyr, gd_king, Bonemass, Dragon, GoblinKing, SeekerQueen, Fader
  type: poke, p_elemental_wet_frost
  weight: 1E30

# Players
- prefab: Player
  type: poke, p_elemental_wet_frost
  poke:
  - self: true
    delay: 0.1                                   # give f_elemental_frozen_health time to save
    parameter: p_elemental_wet_frozen_loop_init 12  ### PLAYER MAX FREEZE TIME

# Elites
- prefab: Troll, Skeleton_Hildir, Abomination, Serpent, StoneGolem, Fenring_Cultist_Hildir, GoblinBrute, GoblinBruteBros, GoblinBrute_Hildir, GoblinShaman_Hildir, SeekerBrute, DvergerMage, Gjall, BonemawSerpent, FallenValkyrie, Morgen
  type: poke, p_elemental_wet_frost
  poke:
  - self: true
    delay: 0.1                                   # give f_elemental_frozen_health time to save
    parameter: p_elemental_wet_frozen_loop_init 9   ### ELITE MAX FREEZE TIME

# All other creatures
- prefab: creature
  type: poke, p_elemental_wet_frost
  fallback: true                                 # any creature prefab not listed above under Elites
  poke:
  - self: true
    delay: 0.1                                   # give f_elemental_frozen_health time to save
    parameter: p_elemental_wet_frozen_loop_init 24  ### NORMAL MAX FREEZE TIME

#####################
# Init frozen loop
- prefab: Player, creature
  type: poke, p_elemental_wet_frozen_loop_init
  filter: int, i_elemental_wet_frost_cd, 0       # off cooldown?
  data: d_elemental_wet_frozen_and_cd_set        # set frozen and cd flags, and init i_elemental_frozen_health_delta
  injectData: true
  spawns:
  - fx_iceshard_hit, 0,0,1
  objectRpc:
  - name: RPC_AddStatusEffect                    # stop movement ASAP
    1: hash, SE_Savheim_ImmobilizedFrozen        # this includes resistant to all - to counter stagger a few lines below this
    2: bool, true
    3: int, 1
    4: float, 1
  - name: RPC_Stagger                            # stagger to force an animation, so we can freeze it
    1: vec, <vec>
  - name: RPC_FreezeFrame                        # this will only apply if mid-animation
    target: <zdo>
    1: float, 24                                 # freeze for max time. let unfreeze process clear early
    delay: 0.2                                   # slight delay so they pose dramatically!
  poke:
  - self: true
    delay: <par1>
    parameter: p_elemental_wet_frozen_rst
  - self: true
    delay: 0.3                                   # keep this equal to LOOP TIME
    parameter: p_elemental_wet_frozen_loop

### Main Frozen Loop - Player (unique data for players to prevent race condition)
- prefab: Player
  type: poke, p_elemental_wet_frozen_loop
  filters:
  - int, i_elemental_wet_frozen, 1               # end loop if no longer frozen
  - int, i_elemental_frozen_health_delta, 0;9999 # end loop if health decreased since previous iteration
  bannedObjects:
  - bmr_cleanse1_aoe, 5
  - bmr_cleanse2_aoe, 5
  - bmr_cleanse3_aoe, 5
  - bmr_cleanse4_aoe, 5
  - bmr_cleanse5_aoe, 5
  - bmr_cleanse6_aoe, 5
  bannedObjectsLimit: 1
  data: d_elemental_frozen_health_save_player    # update health and delta-health each iteration
  injectData: true
  objectRpc:
  - name: RPC_AddStatusEffect
    1: hash, SE_Savheim_ImmobilizedFrozen_NoResists  # players don't stay staggered, so no extra resists
    2: bool, true
    3: int, 1
    4: float, 1
  poke:
  - self: true
    delay: 0.3                                   ### LOOP TIME.  If changed must update SE_Savheim_Immobilization to have slightly higher TtL.  Also update a dozen lines above where it mentions LOOP TIME.
    parameter: p_elemental_wet_frozen_loop
  ### DEBUG ###
  # command: s L hp <float_health> h0 <float_f_elemental_frozen_health> h1 <float_f_elemental_frozen_health_z> hd <int_i_elemental_frozen_health_delta>
  #############

### Main Frozen Loop - creature
- prefab: creature
  type: poke, p_elemental_wet_frozen_loop
  filters:
  - int, i_elemental_wet_frozen, 1               # end loop if no longer frozen
  - int, i_elemental_frozen_health_delta, 0;9999 # end loop if health decreased since previous iteration
  data: d_elemental_frozen_health_save_creature  # update health and delta-health each iteration
  injectData: true
  objectRpc:
  - name: RPC_AddStatusEffect
    1: hash, SE_Savheim_ImmobilizedFrozen
    2: bool, true
    3: int, 1
    4: float, 1
  poke:
  - self: true
    delay: 0.3                                   ### LOOP TIME.  If changed must update SE_Savheim_Immobilization to have slightly higher TtL.  Also update a dozen lines above where it mentions LOOP TIME.
    parameter: p_elemental_wet_frozen_loop
  ### DEBUG ###
  # command: s L hp <float_health> h0 <float_f_elemental_frozen_health> h1 <float_f_elemental_frozen_health_z> hd <int_i_elemental_frozen_health_delta>
  #############

# Shatter check - looking for reduction in health
- prefab: Player, creature
  type: poke, p_elemental_wet_frozen_loop
  filters:
  - int, i_elemental_wet_frozen, 1               # only valid if still frozen
  fallback: true                                 # fallback vs. health_delta filter above
  poke:
  - self: true
    parameter: p_elemental_wet_frozen_rst
  ### DEBUG ###
  # command: s S hp <float_health> h0 <float_f_elemental_frozen_health> h1 <float_f_elemental_frozen_health_z> hd <int_i_elemental_frozen_health_delta>
  #############

# Unfreeze after duration or when hit.  Players don't stay staggered, so no resists.
- prefab: Player
  type: poke, p_elemental_wet_frozen_rst
  filter: int, i_elemental_wet_frozen, 1         # still frozen?
  data: d_elemental_wet_frozen_rst               # unfreeze!
  injectData: true
  spawns:
  - fx_crystal_destruction, 0,0,1
  - sfx_ice_destroyed
  objectRpc:
  - name: RPC_FreezeFrame
    target: <zdo>
    1: float, 0.01                               # unfreeze!
  poke:
  - self: true
    delay: 24                                    ### COOLDOWN AFTER UNFREEZING.  Keep equal to NORMAL MAX FREEZE TIME above.  Lasts max duration of all creatures (else shorter durations wouldn't be an advantage).
    parameter: p_elemental_wet_frost_cd_rst

# Unfreeze after duration or when hit.
- prefab: creature
  type: poke, p_elemental_wet_frozen_rst
  filter: int, i_elemental_wet_frozen, 1         # still frozen?
  data: d_elemental_wet_frozen_rst               # unfreeze!
  injectData: true
  spawns:
  - fx_crystal_destruction, 0,0,1
  - sfx_ice_destroyed
  objectRpc:
  - name: RPC_FreezeFrame
    target: <zdo>
    1: float, 0.01                               # unfreeze!
  - name: RPC_AddStatusEffect
    1: hash, SE_Savheim_ImmobilizedFrozenEnd     # lingering resists to counter stagger
    2: bool, true
    3: int, 1
    4: float, 1
  poke:
  - self: true
    delay: 24                                    ### COOLDOWN AFTER UNFREEZING.  Keep equal to NORMAL MAX FREEZE TIME above.  Lasts max duration of all creatures (else shorter durations wouldn't be an advantage).
    parameter: p_elemental_wet_frost_cd_rst

# Clear cooldown
- prefab: Player, creature
  type: poke, p_elemental_wet_frost_cd_rst
  data: d_elemental_wet_frost_cd_rst
  injectData: true

###############################################################################
# Fire + Poison Effects
- prefab: Player, creature
  type: poke, p_elemental_fire_poison
  filter: int, i_elemental_fire_poison_cd1, 0    # off cooldown for being primary target?
  data: d_elemental_fire_poison_cd1_set          # set cooldown for being primary target
  injectData: true
  spawns:
  - fx_clusterbombstaff_hit
  - fx_jotunbane_hit, 0,0,0.5
  poke:
  - self: true
    delay: 0.1                                   # so the hit that applies doesn't crit
    parameter: p_elemental_fire_poison_stagger <vec>
  - self: true
    delay: 27                                    ### COOLDOWN to be primary target.  Arbitrary.
    parameter: p_elemental_fire_poison_cd1_rst
  - prefab: Player
    minDistance: 0.1
    maxDistance: 3                               ### AE RANGE - close range high knockback
    parameter: p_elemental_fire_poison_calc <x> <z> 200   ### x | z | KNOCKBACK FORCE
  - prefab: creature
    minDistance: 0.1
    maxDistance: 3                               ### AE RANGE - close range high knockback
    parameter: p_elemental_fire_poison_calc <x> <z> 200   ### x | z | KNOCKBACK FORCE
  - prefab: Player
    minDistance: 3.01
    maxDistance: 6                               ### AE RANGE - far range low knockback
    parameter: p_elemental_fire_poison_calc <x> <z> 100   ### x | z | KNOCKBACK FORCE
  - prefab: creature
    minDistance: 3.01
    maxDistance: 6                               ### AE RANGE - far range low knockback
    parameter: p_elemental_fire_poison_calc <x> <z> 100   ### x | z | KNOCKBACK FORCE
  - prefab: vfx_Burning
    maxDistance: 1
    limit: 1
    parameter: p_elemental_fire_poison_vfx_remove
  - prefab: vfx_Poison
    maxDistance: 1
    limit: 1
    parameter: p_elemental_fire_poison_vfx_remove

# immunities to stagger and knockback
- prefab: Eikthyr, gd_king, Bonemass, Dragon, GoblinKing, SeekerQueen, Fader
  types:
  - poke, p_elemental_fire_poison_stagger
  - poke, p_elemental_fire_poison_calc
  weight: 1E30

# stagger primary target
- prefab: Player, creature
  type: poke, p_elemental_fire_poison_stagger
  objectRpc:
  - name: RPC_Stagger
    1: vec, <par1>

# calculate knockback vectors for secondary targets
- prefab: Player, creature
  type: poke, p_elemental_fire_poison_calc
  data: d_force_away_calc_elements
  injectData: true
  poke:
  - self: true
    delay: 0.1                                   # time needed for data to settle
    parameter: p_elemental_fire_poison_impact <par3>

# apply knockbacks and cooldowns to secondary targets
- prefab: Player, creature
  type: poke, p_elemental_fire_poison_impact
  filter: int, i_elemental_fire_poison_cd2, 0    # off cooldown for being secondary target?
  data: d_elemental_fire_poison_cd2_set          # set cooldown for being secondary target
  injectData: true
  objectRpc:
  - name: RPC_Damage
    1: hit, status=SE_Savheim_Elements_Fire_Poison_Smoked force=<par1> dir=<float_f_force_x>,<float_f_force_z>,<y>
  - name: RPC_Damage
    1: hit, status=SE_Savheim_Elements_Fire_Poison_Snared
  poke:
  - self: true
    delay: 5                                     ### COOLDOWN to be secondary target.  Make equal to SE_Savheim_Elements_Fire_Poison_Smoked to visual indiciation of cd status.
    parameter: p_elemental_fire_poison_cd2_rst

# reset primary cooldown
- prefab: Player, creature
  type: poke, p_elemental_fire_poison_cd1_rst
  data: d_elemental_fire_poison_cd1_rst
  injectData: true

# reset secondary cooldown
- prefab: Player, creature
  type: poke, p_elemental_fire_poison_cd2_rst
  data: d_elemental_fire_poison_cd2_rst
  injectData: true

# clear vfx on primary target to paint them as a staggered and isolated target
- prefab: vfx_Burning, vfx_Poison
  type: poke, p_elemental_fire_poison_vfx_remove
  remove: true

###############################################################
# Elements Combos
- prefab: Player
  type: poke, p_elements_player_lightning_damage
  objectRpc:
  - name: RPC_Damage
    1: hit, lightning=<par1> dodge=true block=true

- prefab: Player
  type: poke, p_elements_player_frost_damage
  objectRpc:
  - name: RPC_Damage
    1: hit, frost=<par1> dodge=true block=true

####################################################
# Ghosts do a small amount of Lightning damage
- prefab: Ghost
  types:
  - state, punch0
  - state, punch1
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 3
    delay: 0.5
    parameter: p_elements_player_lightning_damage <randi_9_11>

####################################################
# Wraiths do a small amount of Frost damage
- prefab: Wraith
  type: state, attack
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 2.5
    delay: 0.7
    parameter: p_elements_player_frost_damage <randi_21_25>

####################################################
# Serpents do a small amount of Lightning damage
- prefab: Serpent
  type: state, attack
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 3.5
    delay: 1
    parameter: p_elements_player_lightning_damage <randi_24_28>

####################################################
# Stone Golems do a small amount of Frost damage
- prefab: StoneGolem
  types:
  - state, attack
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 6.35
    delay: 1.2
    parameter: p_elements_player_frost_damage <randi_34_38>

- prefab: StoneGolem
  types:
  - state, attack2
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 5.35
    delay: 1.2
    parameter: p_elements_player_frost_damage <randi_34_38>

- prefab: StoneGolem
  types:
  - state, attack3
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 6.3
    delay: 1.4
    parameter: p_elements_player_frost_damage <randi_34_38>

- prefab: StoneGolem
  types:
  - state, doublesmash
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 5.35
    delay: 1.4
    parameter: p_elements_player_frost_damage <randi_34_38>

####################################################
# Ticks make you Wet if they attach to you
- prefab: Tick
  type: state, attach
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 3
    parameter: p_tick_make_wet

- prefab: Player
  type: poke, p_tick_make_wet
  objectRpc:
  - name: RPC_AddStatusEffect
    1: hash, Wet
    2: bool, true
    3: int, 1
    4: float, 1

####################################################
# Seeker Brood do a small amount of Lightning damage
- prefab: SeekerBrood
  type: state, attack_pincers
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 3
    delay: 0.7
    parameter: p_elements_player_lightning_damage <randi_25_29>

####################################################
# Bonemaw Serpents do a small amount of Lightning damage
- prefab: BonemawSerpent
  type: state, attack_bite
  poke:
  - prefab: Player
    limit: 1
    maxDistance: 3.5
    delay: 1
    parameter: p_elements_player_lightning_damage <randi_41_47>
